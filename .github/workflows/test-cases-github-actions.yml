name: Integration Tests

on:
  pull_request:
    branches:
      - main

jobs:
  integration-test:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Set up PostgreSQL
      uses: ikalnytskyi/action-setup-postgres@v5
      with:
        username: ${{ secrets.DB_USER }}
        password: ${{ secrets.DB_PASS }}
        databse: ${{ secrets.DB_NAME }}
        port: ${{ secrets.DB_PORT }}
    
    #Because ikalnytskyi/action-setup-postgres@v5 is not creating a database on it's own
    - name: Create Database
      run: PGPASSWORD=$POSTGRES_PASSWORD psql -h $POSTGRES_HOST -p $POSTGRES_PORT -U $POSTGRES_USER -c 'CREATE DATABASE' $POSTGRES_DB;'
      env:
        POSTGRES_USER: ${{ secrets.DB_USER }}
        POSTGRES_PASSWORD: ${{ secrets.DB_PASS }}
        POSTGRES_HOST: ${{ secrets.DB_HOST }}
        POSTGRES_PORT: ${{ secrets.DB_PORT }}
        POSTGRES_DB: ${{ secrets.DB_NAME }}

    - name: Set up Go
      uses: actions/setup-go@v2
      with:
        go-version: '^1.21.6'

    #Because Git is trying to install some default Go version otherwise
    - name: Cache Go Modules
      uses: actions/cache@v2
      with:
        path: ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-

    - name: Install Dependencies
      run: go mod tidy

    - name: Enable UUID-OSSP extension
      run: |
        PGPASSWORD=$POSTGRES_PASSWORD psql -h localhost -U $POSTGRES_USER -d $POSTGRES_DB -c 'CREATE EXTENSION IF NOT EXISTS "uuid-ossp";'
      env:
        POSTGRES_USER: ${{ secrets.DB_USER }}
        POSTGRES_PASSWORD: ${{ secrets.DB_PASS}}
        POSTGRES_DB: ${{ secrets.DB_NAME }}
        POSTGRES_HOST: ${{ secrets.DB_HOST }}
        POSTGRES_PORT: ${{ secrets.DB_PORT }}

    - name: Run Integration Tests
      env:
        POSTGRES_USER: ${{ secrets.DB_USER }}
        POSTGRES_PASSWORD: ${{ secrets.DB_PASS}}
        POSTGRES_DB: ${{ secrets.DB_NAME }}
        POSTGRES_HOST: ${{ secrets.DB_HOST }}
        POSTGRES_PORT: ${{ secrets.DB_PORT }}
      run: go test -v ./tests;